# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ 'master' ]
  pull_request:
    branches: [ '**' ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Build with Maven
      run: mvn --show-version --batch-mode package --file pom.xml


  e2e:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 10.x ]
        neo4j-version: [ "4.0", "4.0-enterprise", "4.1", "4.1-enterprise" ]
    services:
      neo4j:
        image: neo4j:${{ matrix.neo4j-version }}
        ports: [ "7687:7687" ]
        env:
          NEO4J_ACCEPT_LICENSE_AGREEMENT: yes
          NEO4J_AUTH: "neo4j/abcde"
        options: >-
          --name neo4j-e2e
          --health-cmd "cypher-shell -u neo4j -p abcde 'RETURN 1'"
          --health-interval 10s
          --health-timeout 5s
          --health-start-period 10s
          --health-retries 5
          --volume /tmp:/movies
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Download dataset
        run: curl --output /tmp/movies.cypher https://raw.githubusercontent.com/neo4j-graph-examples/movies/master/scripts/import.cypher
      - name: Import dataset
        run: docker exec --interactive neo4j-e2e cypher-shell -u neo4j -p abcde --file /movies/movies.cypher
      - uses: actions/checkout@v2
      - uses: cypress-io/github-action@v2
        env:
          CYPRESS_NEO4J_URI: bolt://localhost
          CYPRESS_NEO4J_DATABASE: "neo4j"
          CYPRESS_NEO4J_USER: neo4j
          CYPRESS_NEO4J_PASSWORD: abcde
        with:
          start: mvn package -DskipTests exec:java
          browser: chrome
          headless: true
          spec: cypress/integration/movies.spec.js